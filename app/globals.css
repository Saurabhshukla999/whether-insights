@tailwind base;
@tailwind components;
@tailwind utilities;

body {
  font-family: Arial, Helvetica, sans-serif;
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }

  /* Premium animation classes */
  .animate-float {
    animation: float 6s ease-in-out infinite;
    will-change: transform;
  }

  .animate-blob {
    animation: blob 7s infinite;
    will-change: transform;
  }

  .animate-wave {
    animation: wave 3s ease-in-out infinite;
    will-change: transform;
  }

  .animate-spin-slow {
    animation: spin 20s linear infinite;
    will-change: transform;
  }

  .animate-reverse-spin-slow {
    animation: spin 20s linear infinite reverse;
    will-change: transform;
  }

  .animate-bounce-slow {
    animation: bounce-slow 3s ease-in-out infinite;
    will-change: transform;
  }

  .animate-text-shimmer {
    animation: text-shimmer 2s ease-in-out infinite;
    will-change: background-position;
  }

  .animate-fade-in-up {
    animation: fade-in-up 1s ease-out forwards;
    opacity: 0;
    will-change: opacity, transform;
  }

  .animate-bounce-in {
    animation: bounce-in 0.6s ease-out forwards;
    opacity: 0;
    transform: scale(0);
    will-change: opacity, transform;
  }

  .animate-fade-in {
    animation: fade-in 0.6s ease-out forwards;
    opacity: 0;
    will-change: opacity;
  }

  .animate-breathing {
    animation: breathing 2s ease-in-out infinite;
    will-change: transform, box-shadow;
  }

  .animate-crt-glitch {
    animation: crt-glitch 0.1s ease-in-out;
    will-change: transform;
  }

  .animation-delay-2000 {
    animation-delay: 2s;
  }

  .animation-delay-4000 {
    animation-delay: 4s;
  }

  .bg-300 {
    background-size: 300% 300%;
  }

  .animate-gradient-hover:hover {
    animation: gradient-shift 2s ease infinite;
    will-change: background-position;
  }

  .animate-gradient-scroll {
    animation: gradient-shift 3s ease infinite;
    will-change: background-position;
  }

  .animate-gradient-continuous {
    animation: gradient-shift 4s ease infinite;
    will-change: background-position;
  }

  .animate-morph-blob {
    animation: morph-blob 8s ease-in-out infinite;
    will-change: border-radius, transform;
  }

  .animate-morph-blob-reverse {
    animation: morph-blob-reverse 10s ease-in-out infinite;
    will-change: border-radius, transform;
  }

  .animate-morph-blob-slow {
    animation: morph-blob-slow 12s ease-in-out infinite;
    will-change: border-radius, transform;
  }

  /* Premium perspective utilities */
  .perspective-1000 {
    perspective: 1000px;
  }

  .preserve-3d {
    transform-style: preserve-3d;
  }

  /* Enhanced keyframes with sophisticated easing */
  @keyframes float {
    0%,
    100% {
      transform: translate3d(0, 0, 0) rotateX(0deg);
    }
    25% {
      transform: translate3d(0, -10px, 0) rotateX(2deg);
    }
    50% {
      transform: translate3d(0, -20px, 0) rotateX(0deg);
    }
    75% {
      transform: translate3d(0, -10px, 0) rotateX(-2deg);
    }
  }

  @keyframes blob {
    0% {
      transform: translate3d(0, 0, 0) scale(1) rotate(0deg);
      border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
    }
    25% {
      transform: translate3d(30px, -50px, 0) scale(1.1) rotate(90deg);
      border-radius: 30% 60% 70% 40% / 50% 60% 30% 60%;
    }
    50% {
      transform: translate3d(-20px, 20px, 0) scale(0.9) rotate(180deg);
      border-radius: 50% 60% 30% 60% / 30% 60% 70% 40%;
    }
    75% {
      transform: translate3d(20px, -30px, 0) scale(1.05) rotate(270deg);
      border-radius: 60% 40% 60% 40% / 70% 30% 50% 60%;
    }
    100% {
      transform: translate3d(0, 0, 0) scale(1) rotate(360deg);
      border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
    }
  }

  @keyframes wave {
    0%,
    100% {
      transform: translate3d(0, 0, 0) rotateZ(0deg);
    }
    25% {
      transform: translate3d(-12.5%, 0, 0) rotateZ(1deg);
    }
    50% {
      transform: translate3d(-25%, 0, 0) rotateZ(0deg);
    }
    75% {
      transform: translate3d(-12.5%, 0, 0) rotateZ(-1deg);
    }
  }

  @keyframes bounce-slow {
    0%,
    100% {
      transform: translate3d(0, 0, 0) scale(1);
    }
    25% {
      transform: translate3d(0, -5px, 0) scale(1.02);
    }
    50% {
      transform: translate3d(0, -10px, 0) scale(1);
    }
    75% {
      transform: translate3d(0, -5px, 0) scale(0.98);
    }
  }

  @keyframes text-shimmer {
    0% {
      background-position: -200% center;
    }
    100% {
      background-position: 200% center;
    }
  }

  @keyframes fade-in-up {
    from {
      opacity: 0;
      transform: translate3d(0, 30px, 0) rotateX(-10deg);
      filter: blur(10px);
    }
    to {
      opacity: 1;
      transform: translate3d(0, 0, 0) rotateX(0deg);
      filter: blur(0px);
    }
  }

  @keyframes bounce-in {
    0% {
      opacity: 0;
      transform: scale3d(0, 0, 1) rotate(-180deg);
    }
    25% {
      opacity: 0.5;
      transform: scale3d(0.5, 0.5, 1) rotate(-90deg);
    }
    50% {
      opacity: 1;
      transform: scale3d(1.1, 1.1, 1) rotate(0deg);
    }
    75% {
      transform: scale3d(0.95, 0.95, 1) rotate(5deg);
    }
    100% {
      opacity: 1;
      transform: scale3d(1, 1, 1) rotate(0deg);
    }
  }

  @keyframes fade-in {
    from {
      opacity: 0;
      filter: blur(5px);
    }
    to {
      opacity: 1;
      filter: blur(0px);
    }
  }

  @keyframes gradient-shift {
    0%,
    100% {
      background-position: 0% 50%;
    }
    25% {
      background-position: 50% 25%;
    }
    50% {
      background-position: 100% 50%;
    }
    75% {
      background-position: 50% 75%;
    }
  }

  @keyframes morph-blob {
    0%,
    100% {
      border-radius: 60% 40% 30% 70% / 60% 30% 70% 40%;
      transform: translate3d(0, 0, 0) rotate(0deg) scale(1);
    }
    20% {
      border-radius: 30% 60% 70% 40% / 50% 60% 30% 60%;
      transform: translate3d(20px, -20px, 0) rotate(72deg) scale(1.1);
    }
    40% {
      border-radius: 50% 60% 30% 60% / 30% 60% 70% 40%;
      transform: translate3d(-20px, 20px, 0) rotate(144deg) scale(0.9);
    }
    60% {
      border-radius: 60% 40% 60% 40% / 70% 30% 50% 60%;
      transform: translate3d(20px, 20px, 0) rotate(216deg) scale(1.05);
    }
    80% {
      border-radius: 40% 70% 40% 60% / 40% 70% 60% 30%;
      transform: translate3d(-10px, -10px, 0) rotate(288deg) scale(0.95);
    }
  }

  @keyframes breathing {
    0%,
    100% {
      transform: scale3d(1, 1, 1);
      box-shadow: 0 0 20px rgba(59, 130, 246, 0.3);
      filter: brightness(1);
    }
    50% {
      transform: scale3d(1.02, 1.02, 1);
      box-shadow: 0 0 30px rgba(59, 130, 246, 0.5);
      filter: brightness(1.1);
    }
  }

  @keyframes crt-glitch {
    0% {
      transform: translate3d(0, 0, 0);
      filter: hue-rotate(0deg);
    }
    20% {
      transform: translate3d(-2px, 2px, 0);
      filter: hue-rotate(90deg);
    }
    40% {
      transform: translate3d(-2px, -2px, 0);
      filter: hue-rotate(180deg);
    }
    60% {
      transform: translate3d(2px, 2px, 0);
      filter: hue-rotate(270deg);
    }
    80% {
      transform: translate3d(2px, -2px, 0);
      filter: hue-rotate(360deg);
    }
    100% {
      transform: translate3d(0, 0, 0);
      filter: hue-rotate(0deg);
    }
  }

  /* Ultra-smooth cursor optimizations */
  .cursor-none {
    cursor: none !important;
  }

  .cursor-smooth {
    will-change: transform;
    backface-visibility: hidden;
    perspective: 1000px;
    transform-style: preserve-3d;
  }

  /* Disable cursor lag on all interactive elements */
  a,
  button,
  input,
  textarea,
  [role="button"] {
    cursor: none !important;
  }

  /* Hardware acceleration for cursor elements */
  [data-cursor] {
    transform: translate3d(0, 0, 0);
    will-change: transform;
  }
}

/* Performance optimizations */
@layer base {
  * {
    @apply border-border;
  }

  html {
    scroll-behavior: smooth;
  }

  body {
    @apply bg-black text-white;
  }

  /* Optimize rendering */
  canvas {
    image-rendering: optimizeSpeed;
    image-rendering: -moz-crisp-edges;
    image-rendering: -webkit-optimize-contrast;
    image-rendering: optimize-contrast;
  }

  /* Reduce motion for accessibility */
  @media (prefers-reduced-motion: reduce) {
    *,
    *::before,
    *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
    }
  }
}

/* GPU acceleration for better performance */
.will-change-transform {
  will-change: transform;
}

.transform-gpu {
  transform: translate3d(0, 0, 0);
}
